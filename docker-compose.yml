version: "3.8"

services:
  db:
    image: postgres:16
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-auth}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-secret}
      POSTGRES_DB: ${POSTGRES_DB:-maindb}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-auth} -d ${AUTH_DB:-authdb}"]
      interval: 10s
      timeout: 5s
      retries: 10

  pgadmin:
    image: dpage/pgadmin4
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8083:80"
    depends_on:
      - db

  auth-service:
    build:
      context: ./services/service_auth
      dockerfile: Dockerfile
    restart: unless-stopped
    env_file: .env
    environment:
      PORT: ${AUTH_SERVICE_PORT:-8080}
      AUTH_SECRET: ${AUTH_SECRET:-supersecretkey}
      AUTH_ISSUER: ${AUTH_ISSUER:-auth_service}
      AUTH_AUDIENCE: ${AUTH_AUDIENCE:-orgdirectory}
      DB_DSN: postgres://${POSTGRES_USER:-auth}:${POSTGRES_PASSWORD:-secret}@db:5432/${AUTH_DB:-authdb}?sslmode=disable
    ports:
      - "${AUTH_SERVICE_PORT:-8080}:${AUTH_SERVICE_PORT:-8080}"
    depends_on:
      db:
        condition: service_healthy

  web:
    build:
      context: ./src/OrgDirectory.Web
      dockerfile: Dockerfile   
    restart: unless-stopped
    env_file: .env
    environment:
      ASPNETCORE_URLS: http://+:${WEB_PORT:-5000}
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: Host=db;Port=5432;Database=${POSTGRES_DB:-maindb};Username=${POSTGRES_USER:-auth};Password=${POSTGRES_PASSWORD:-secret}
      Auth__Issuer: ${AUTH_ISSUER:-auth_service}
      Auth__Audience: ${AUTH_AUDIENCE:-app}
      Auth__Secret: ${AUTH_SECRET:-supersecretkey}
      Auth__ServiceBaseUrl: http://auth-service:${AUTH_SERVICE_PORT:-8080}
    ports:
      - "${WEB_PORT:-5000}:${WEB_PORT:-5000}"
    volumes:
      
      - dpkeys:/keys
    depends_on:
      db:
        condition: service_healthy
      auth-service:
        condition: service_started

volumes:
  pgdata:
  dpkeys:
